/*
 * Copyright 2021 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(fix_cc.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(8a229b1b3f87e8f2d591b8817347245b)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <iqbalance/fix_cc.h>
// pydoc.h is automatically generated in the build directory
#include <fix_cc_pydoc.h>

void bind_fix_cc(py::module& m)
{

    using fix_cc    = ::gr::iqbalance::fix_cc;


    py::class_<fix_cc, gr::sync_block, gr::block, gr::basic_block,
        std::shared_ptr<fix_cc>>(m, "fix_cc", D(fix_cc))

        .def(py::init(&fix_cc::make),
           py::arg("mag") = 0.F,
           py::arg("phase") = 0.F,
           D(fix_cc,make)
        )
        




        
        .def("set_mag",&fix_cc::set_mag,       
            py::arg("mag"),
            D(fix_cc,set_mag)
        )


        
        .def("set_phase",&fix_cc::set_phase,       
            py::arg("phase"),
            D(fix_cc,set_phase)
        )


        
        .def("mag",&fix_cc::mag,       
            D(fix_cc,mag)
        )


        
        .def("phase",&fix_cc::phase,       
            D(fix_cc,phase)
        )


        
        .def("apply_new_corrections",&fix_cc::apply_new_corrections,       
            py::arg("msg"),
            D(fix_cc,apply_new_corrections)
        )


        
        .def("work",&fix_cc::work,       
            py::arg("noutput_items"),
            py::arg("input_items"),
            py::arg("output_items"),
            D(fix_cc,work)
        )

        ;




}








